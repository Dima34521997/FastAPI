name: rasmaker
services:
  api:
    depends_on:
      db:
        condition: service_healthy
    secrets:
      - api-db-connection
    build: ./api
    ports:
      - "${API_HOST_IP}:${API_HOST_PORT}:80"
    restart: unless-stopped
  db:
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/db-admin-password
    secrets:
      - db-admin-password
      - api-db-connection
    build: ./db
    healthcheck:
      test: ["CMD", "psql", "-U", "postgres", "-d", "postgres", "-c", "SELECT 1"]
      interval: 1m
      timeout: 5s
      retries: 2
      start_period: 1m
      start_interval: 2s
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped
    shm_size: 128mb
  pgadmin:
    depends_on:
      db:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD_FILE: /run/secrets/pgadmin-password
    secrets:
      - pgadmin-password
    configs:
      - source: pgadmin-servers
        target: /pgadmin4/servers.json
        uid: "5050"
        gid: "5050"
        mode: 0440
    image: dpage/pgadmin4:latest
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://localhost:80/misc/ping"]
      interval: 10s
      timeout: 10s
      start_period: 160s
      start_interval: 5s
      retries: 2
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "${PGADMIN_HOST_IP}:${PGADMIN_HOST_PORT}:80"
    restart: unless-stopped
volumes:
  db-data:
  pgadmin-data:
secrets:
  db-admin-password:
    file: ${POSTGRES_PASSWORD_FILE}
  api-db-connection:
    file: ${API_DB_CONNECTION_FILE}
  pgadmin-password:
    file: ${PGADMIN_PASSWORD_FILE}
configs:
  pgadmin-servers:
    file: ${PGADMIN_SERVERS_FILE}